name: Detection Real Partners

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-partners:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get changed test files
      id: changed-files
      uses: tj-actions/changed-files@v36
      with:
        files: |
          tests/**/*.py

    - name: Print changed files
      run: echo "${{ steps.changed-files.outputs.all_changed_files }}"

    - name: Check for real partner names in changed test files
      if: steps.changed-files.outputs.all_changed_files != ''
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        set -e
        PARTNER_NAMES="inshoppingcart gluautomation1 gluautomation2 gluautomation3 gluautomation4 \
        mobileautomation mobileautomation2 mobileautomation3 mobileautomation4 mobileautomation5 \
        qaautomation1 qaautomation2 qaautomation3 qaautomation4 qaautomation5 \
        roiautomation seleniumautomation seleniumautomation1 seleniumautomation2 seleniumautomation3 \
        sideautomation sideautomation1 sideautomation2 sideautomation3 sideautomation4 sideautomation5 \
        eurekatest websuitetest1 websuitetest2 websuitetest3 vikingsankara singlepageqa ozaspava testqa \
        shopbagg newsletteruat setupwizard hellokitty roiautomation"
        ERROR_FOUND=0
        
        for FILE in $ALL_CHANGED_FILES; do
          if [ -f "$FILE" ]; then
            echo "Checking file: $FILE"
        
            if grep -q 'settings.env_variables\[SettingKeys.PARTNER_NAME\] = "' "$FILE"; then
              PARTNER_NAME=$(grep 'settings.env_variables\[SettingKeys.PARTNER_NAME\] = "' "$FILE" | \
                sed -n 's/.*settings.env_variables\[SettingKeys.PARTNER_NAME\] = "\(.*\)".*/\1/p')
              if [[ "$PARTNER_NAMES" =~ (^|[[:space:]])"$PARTNER_NAME"($|[[:space:]]) ]]; then
                echo "File $FILE has a valid partner name in settings: $PARTNER_NAME"
              else
                echo "File $FILE has an invalid partner name in settings: $PARTNER_NAME"
                ERROR_FOUND=1
              fi
            else
              echo "File $FILE does not contain settings.env_variables[SettingKeys.PARTNER_NAME] = \"\". Success."
            fi
        
            if grep -q 'settings.env_variables\[SettingKeys.PARTNER_PANEL_URL\] = "https://' "$FILE"; then
              PARTNER_PANEL_URL=$(grep 'settings.env_variables\[SettingKeys.PARTNER_PANEL_URL\] = "https://'  "$FILE" | \
               sed -n 's/.*settings.env_variables\[SettingKeys.PARTNER_PANEL_URL\] = "https:\/\/\([^"]*\).inone.useinsider.com\/".*/\1/p')
               if [[ "$PARTNER_NAMES" =~ (^|[[:space:]])"$PARTNER_PANEL_URL"($|[[:space:]]) ]]; then
                 echo "File $FILE has a valid partner url in settings: $PARTNER_PANEL_URL"
               else
                 echo "File $FILE has an invalid partner panel URL in settings: $PARTNER_PANEL_URL"
                 ERROR_FOUND=1
               fi
            else
              echo "File $FILE does not contain settings.env_variables[SettingKeys.PARTNER_PANEL_URL] = \"\". Success."
            fi
        
            if grep -q 'partner_url = "https://' "$FILE"; then
              PARTNER_URL=$(grep 'partner_url = "https://' "$FILE" | \
                sed -n 's/.*partner_url = "https:\/\/\(.*\).inone.useinsider.com\/".*/\1/p')
              if [[ "$PARTNER_NAMES" =~ (^|[[:space:]])"$PARTNER_URL"($|[[:space:]]) ]]; then
                echo "File $FILE has a valid partner URL: $PARTNER_URL"
              else
                echo "File $FILE has an invalid partner URL: $PARTNER_URL"
                ERROR_FOUND=1
              fi
            else
              echo "File $FILE does not contain partner_url = \"https://partner.inone.useinsider.com/\". Success."
            fi
        
            if grep -q 'partner_name = "' "$FILE"; then
              PARTNER_NAME=$(grep 'partner_name = "' "$FILE" |sed -n 's/.*partner_name = "\(.*\)".*/\1/p')
              if [[ "$PARTNER_NAMES" =~ (^|[[:space:]])"$PARTNER_NAME"($|[[:space:]]) ]]; then
                echo "File $FILE has a valid partner name: $PARTNER_NAME"
              else
                echo "File $FILE has an invalid partner name: $PARTNER_NAME"
                ERROR_FOUND=1
              fi
            else
              echo "File $FILE does not contain partner_name = \"\". Success."
            fi
          else
            echo "File $FILE does not exist."
          fi
        done
        if [ $ERROR_FOUND -eq 1 ]; then
          echo "One or more files contain invalid partner names or URLs."
          exit 1
        else
          echo "All test files are valid."
        fi
        


